(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{664:function(e,t,l){"use strict";l.r(t);var r=l(16),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"前端构建工具概览"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#前端构建工具概览"}},[e._v("#")]),e._v(" 前端构建工具概览")]),e._v(" "),l("ul",[l("li",[e._v("构建\n"),l("ul",[l("li",[e._v("任务化构建\n"),l("ul",[l("li",[e._v("Grunt")]),e._v(" "),l("li",[e._v("Gulp")]),e._v(" "),l("li",[e._v("Parcel")]),e._v(" "),l("li",[e._v("Rollup")])])]),e._v(" "),l("li",[e._v("系统化构建\n"),l("ul",[l("li",[e._v("Webpack")])])]),e._v(" "),l("li",[e._v("基于ESModules构建\n"),l("ul",[l("li",[e._v("Vite")]),e._v(" "),l("li",[e._v("SnowPack")])])])])])]),e._v(" "),l("h2",{attrs:{id:"任务化构建方式"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#任务化构建方式"}},[e._v("#")]),e._v(" 任务化构建方式")]),e._v(" "),l("h3",{attrs:{id:"gulp-grunt"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#gulp-grunt"}},[e._v("#")]),e._v(" Gulp/Grunt")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("2012 年 Grunt 发布首版[6]¹²，将处理过程定义为多个不同的任务，每个任务执行一个函数或插件；")])]),e._v(" "),l("li",[l("p",[e._v("2013 年 Gulp 发布首版[7]，并快速在同年发布到了 3.0 正式版，在 Grunt 抽象任务的基础上，Gulp 引入了流编程的概念，避免在执行复杂任务时，需要将编译中间结果放在临时文件夹的场景；")])])]),e._v(" "),l("p",[e._v("一个基于流（任务）的自动化构建工具，Gulp 是基于 Node 构建的，利用它流的能力，它强调的是前端开发流程规范化管理，从 Vue 等 SPA 框架出现后，它慢慢不介入业务的实际生产开发中了。")]),e._v(" "),l("h4",{attrs:{id:"特点"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[e._v("#")]),e._v(" 特点")]),e._v(" "),l("ul",[l("li",[e._v("Gulp 所处理的任务大多都是以插件的形式存在的，所以在使用前，要先安装插件依赖。")]),e._v(" "),l("li",[e._v("Grunt 是 Gulp 的前身，Gulp 及其了它的精华。")]),e._v(" "),l("li",[e._v("Gulp相比 Grunt 更加简洁，设计理念更合理，核心API只有五个。")]),e._v(" "),l("li",[e._v("Gulp 每个插件只完成一个功能。")])]),e._v(" "),l("h4",{attrs:{id:"什么时候用-gulp-grunt"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用-gulp-grunt"}},[e._v("#")]),e._v(" 什么时候用 Gulp/Grunt")]),e._v(" "),l("p",[e._v("如果你的应用模块依赖简单，没有用到模块化的概念，只需要简单的合并压缩，就可以使用。但如果你的整个项目都是用模块化管理的，互相依赖模块很强，建议还是用 Webpack。")]),e._v(" "),l("h4",{attrs:{id:"gulp-与-grunt-打包less文件的对比"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#gulp-与-grunt-打包less文件的对比"}},[e._v("#")]),e._v(" Gulp 与 Grunt 打包Less文件的对比")]),e._v(" "),l("p",[e._v("Gulp：执行 IO 操作，读取 Less 文件，转成 CSS 文件，压缩代码，存储。\nGrunt：执行 IO 操作，读取 Less 文件，转成 CSS 文件，存储，再重新读取 CSS 文件，压缩，存储。")]),e._v(" "),l("h3",{attrs:{id:"parcel"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#parcel"}},[e._v("#")]),e._v(" Parcel")]),e._v(" "),l("p",[e._v("2013 年⁴，Parcel[12] 发布首版，并在 2018 年发布 1.0 正式版，在当时它主打无配置启动项目；\nParcel 首版发布于 2013 年，但是它大规模进入公共视野是在 2017 年。")]),e._v(" "),l("ul",[l("li",[e._v("一个极速零配置的 Web 应用打包工具，能支持打包各种文件。")])]),e._v(" "),l("ol",[l("li",[e._v("无配置完成构建打包项目要求。")]),e._v(" "),l("li",[e._v("内置常见场景的构建方案及其依赖，无需安装各种依赖。")]),e._v(" "),l("li",[e._v("能以HTML为入口，自动检测和打包依赖资源。")]),e._v(" "),l("li",[e._v("默认支持模块热替换，真正的开箱即用。")]),e._v(" "),l("li",[e._v("Transform 过程是通过 Plugins 来处理的，不像 Webpack 是通过Loader。")])]),e._v(" "),l("h3",{attrs:{id:"rollup"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#rollup"}},[e._v("#")]),e._v(" Rollup")]),e._v(" "),l("p",[e._v("2015 年，Rollup[13] 发布首版，并在 2019 年发布 1.0 正式版，它主打工具库的打包，相比 Webpack 配置更简单和轻量；")]),e._v(" "),l("ul",[l("li",[e._v("Rollup 是一个 JS 模块打包器，它与 Webpack 定位不同，它更专注于 JS 类库的打包工作。操作过程和webpack差不多，它也是可以以命令行或者配置文件（rollup.config.js）的方式来完成打包操作的。默认支持 ES Module 中的 import/export 语法还有相对路径（Webpack中相对路径要配合path模块）。")])]),e._v(" "),l("ol",[l("li",[e._v("Rollup 更适合用来开发一些纯 JS 库。")]),e._v(" "),l("li",[e._v("Rollup 不支持代码分割。")]),e._v(" "),l("li",[e._v("Rollup 默认只支持 import/export 方式导入导出，如需使用 CommonJS 模块规范，则必须单独配置插件。")]),e._v(" "),l("li",[e._v("Rollup 不能直接处理导入的第三方依赖模块，需要插件@rollup/plugin-node-resolve 来处理路径才能使用。")]),e._v(" "),l("li",[e._v("开发服务器 Dev Server 需要通过 rollup-plugin-server 插件来实现。")]),e._v(" "),l("li",[e._v("支持Tree-shaking")])]),e._v(" "),l("h2",{attrs:{id:"系统化构建方式"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#系统化构建方式"}},[e._v("#")]),e._v(" 系统化构建方式")]),e._v(" "),l("ul",[l("li",[e._v("WebPack（模块依赖）")])]),e._v(" "),l("p",[e._v("2012 年 Webpack[8] 发布首版，并于 2014 年发布 1.0 正式版，它通过分析模块间依赖来决定编译过程，将可扩展点抽象为 loader 和 plugin。")]),e._v(" "),l("p",[e._v("2020 年，Webpack 5.0 发布，实现了多进程编译以优化计算密集型任务，并强化了缓存机制；")]),e._v(" "),l("p",[e._v("Webpack 最终能统治社区，离不开它的三个王牌能力：")]),e._v(" "),l("ol",[l("li",[e._v("一切皆可打包")]),e._v(" "),l("li",[e._v("本地模块热加载（HMR）")]),e._v(" "),l("li",[e._v("按需加载。")])]),e._v(" "),l("p",[e._v("而 Webpack 的弱项是其配置的繁琐和复杂，在这个阶段出现的大部分新包，也是在牺牲了部分能力的前提下，去强化封装性和简化复杂度")]),e._v(" "),l("ul",[l("li",[l("a",{attrs:{href:"http://www.ffbig.com/19-Webpack/00-webpack%E5%9F%BA%E7%A1%80.html#webpack-%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多内容-请跳转WebPack专项"),l("OutboundLink")],1)])]),e._v(" "),l("h2",{attrs:{id:"bundleless-性能优化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#bundleless-性能优化"}},[e._v("#")]),e._v(" Bundleless（性能优化）")]),e._v(" "),l("ol",[l("li",[e._v("更底层的语言编写、bundless，如果用一个词描述就是"),l("strong",[e._v("高性能")]),e._v("。")]),e._v(" "),l("li",[e._v("积极拥抱浏览器新特性或者知识跨界都可以帮助前端领域取得新的突破。")])]),e._v(" "),l("h3",{attrs:{id:"snowpack"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#snowpack"}},[e._v("#")]),e._v(" SnowPack")]),e._v(" "),l("p",[e._v("2020 年，Snowpack[14] 发布首版正式版，主打不打包项目依赖的模块（Bundleless），而是直接依赖 CDN 提供的模块文件，大大提升了本地环境运行速度；")]),e._v(" "),l("p",[e._v('Snowpack 是由 Skypack 和 Pika 的创造者开发的一款构建工具。它提供了一个很棒的开发服务器，并且是以 "非打包式开发 "的理念创建的。')]),e._v(" "),l("p",[e._v("默认情况下， Snowpack 的构建步骤并没有将文件打包到一个单一的包中，而是提供了在浏览器中运行的非打包esmodules。实际上 esbuild 是作为一个依赖关系包含在其中的，但我们的想法是使用 JavaScript 模块，只有在需要时才与 esbuild 打包。")]),e._v(" "),l("h3",{attrs:{id:"vite"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[e._v("#")]),e._v(" Vite")]),e._v(" "),l("p",[e._v("2020 年，Vite[15] 发布首版，同样主打 Bundleless。")]),e._v(" "),l("p",[e._v("2020 年，Vite 发布 2.0，使用 esbuild 实现了性能二次提升；")]),e._v(" "),l("h2",{attrs:{id:"推荐阅读"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[e._v("#")]),e._v(" 推荐阅读")]),e._v(" "),l("p",[l("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg4MjE5OTI4Mw==&mid=2247490237&idx=1&sn=363a5853432edefb10e51f6076469457&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("2022，前端工具链十年盘点"),l("OutboundLink")],1)]),e._v(" "),l("p",[l("a",{attrs:{href:"https://juejin.cn/post/6954891826604015630#heading-2",target:"_blank",rel:"noopener noreferrer"}},[e._v("主流前端代码构建工具评测"),l("OutboundLink")],1)]),e._v(" "),l("p",[l("a",{attrs:{href:"https://mp.weixin.qq.com/s/L5CWnkGuRuq-VV0ZUshlkg",target:"_blank",rel:"noopener noreferrer"}},[e._v("常用构建工具对比"),l("OutboundLink")],1)]),e._v(" "),l("p",[l("a",{attrs:{href:"https://juejin.cn/post/7091655236938366989",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESBuild & SWC浅谈: 新一代构建工具"),l("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);