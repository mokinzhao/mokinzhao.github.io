(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{652:function(v,_,l){"use strict";l.r(_);var i=l(16),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"前端程化大纲"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#前端程化大纲"}},[v._v("#")]),v._v(" 前端程化大纲")]),v._v(" "),l("p",[v._v("我们知道一个前端项目的研发流程大概是这样几个阶段")]),v._v(" "),l("ul",[l("li",[v._v("开发->调试->构建->测试->部署->监控->统计->分析->维护")])]),v._v(" "),l("p",[v._v("那么前端工程化就是让这个链路更加的标准、健壮、易用、可维护、可扩展的一系列措施")]),v._v(" "),l("p",[v._v("作者细化了一下穿插在整个研发流程中各个阶段的工具如下")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("开发")]),v._v(" "),l("ul",[l("li",[v._v("WebIDE")]),v._v(" "),l("li",[v._v("规范化工具：\n"),l("ul",[l("li",[v._v("Eslint")]),v._v(" "),l("li",[v._v("StyleLint")]),v._v(" "),l("li",[v._v("Prettier")]),v._v(" "),l("li",[v._v("Lint-staged")])])]),v._v(" "),l("li",[v._v("Git-flow")]),v._v(" "),l("li",[v._v("CLI")])])]),v._v(" "),l("li",[l("p",[v._v("调试")]),v._v(" "),l("ul",[l("li",[v._v("VSCode Debug")]),v._v(" "),l("li",[v._v("Chrome Console")]),v._v(" "),l("li",[v._v("React DevTools")]),v._v(" "),l("li",[v._v("React Profiler")])])]),v._v(" "),l("li",[l("p",[v._v("构建")]),v._v(" "),l("ul",[l("li",[v._v("任务化构建\n"),l("ul",[l("li",[v._v("Grunt")]),v._v(" "),l("li",[v._v("Gulp")]),v._v(" "),l("li",[v._v("Parcel")]),v._v(" "),l("li",[v._v("Rollup")])])]),v._v(" "),l("li",[v._v("系统化构建\n"),l("ul",[l("li",[v._v("Webpack")])])]),v._v(" "),l("li",[v._v("基于ESModules构建\n"),l("ul",[l("li",[v._v("Vite")]),v._v(" "),l("li",[v._v("SnowPack")])])]),v._v(" "),l("li",[v._v("编译\n"),l("ul",[l("li",[v._v("Babel")]),v._v(" "),l("li",[v._v("SWC")]),v._v(" "),l("li",[v._v("Esbuild")])])])])]),v._v(" "),l("li",[l("p",[v._v("测试")]),v._v(" "),l("ul",[l("li",[v._v("E2E测试\n"),l("ul",[l("li",[v._v("Mocha, Ava, Karma, Jest, Jasmine")])])]),v._v(" "),l("li",[v._v("UI测试\n"),l("ul",[l("li",[v._v("ReactTestUtils, Test Render, Enzyme, React-Testing-Library, Vue-Test-Utils")])])]),v._v(" "),l("li",[v._v("单元测试\n"),l("ul",[l("li",[v._v("Nightwatch, Cypress, Phantomjs, Puppeteer")])])])])]),v._v(" "),l("li",[l("p",[v._v("部署")]),v._v(" "),l("ul",[l("li",[v._v("灰度发布")]),v._v(" "),l("li",[v._v("Docker+K8s")]),v._v(" "),l("li",[v._v("Nginx\n"),l("ul",[l("li",[v._v("负载均衡")]),v._v(" "),l("li",[v._v("反向代理")])])])])]),v._v(" "),l("li",[l("p",[v._v("监控")]),v._v(" "),l("ul",[l("li",[v._v("工具：Sentry/FunDebug/Webfunny\n"),l("ul",[l("li",[v._v("性能监控")]),v._v(" "),l("li",[v._v("错误监控")]),v._v(" "),l("li",[v._v("行为监控")]),v._v(" "),l("li",[v._v("网络链路")])])])])]),v._v(" "),l("li",[l("p",[v._v("统计")]),v._v(" "),l("ul",[l("li",[v._v("Google Analytics")]),v._v(" "),l("li",[v._v("国内：友盟/百度")])])]),v._v(" "),l("li",[l("p",[v._v("分析")]),v._v(" "),l("ul",[l("li",[v._v("APM平台")])])]),v._v(" "),l("li",[l("p",[v._v("维护")]),v._v(" "),l("ul",[l("li",[v._v("性能优化")]),v._v(" "),l("li",[v._v("安全防护")])])])]),v._v(" "),l("h2",{attrs:{id:"模块化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),l("ul",[l("li",[v._v("CommonJS")]),v._v(" "),l("li",[v._v("AMD")]),v._v(" "),l("li",[v._v("CDM")]),v._v(" "),l("li",[v._v("UMD")]),v._v(" "),l("li",[v._v("ES6")])]),v._v(" "),l("h2",{attrs:{id:"包管理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#包管理"}},[v._v("#")]),v._v(" 包管理")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("Npm")])]),v._v(" "),l("li",[l("p",[v._v("CNpm")])]),v._v(" "),l("li",[l("p",[v._v("Yarn")])]),v._v(" "),l("li",[l("p",[v._v("Pnpm")])]),v._v(" "),l("li",[l("p",[v._v("MonoRepo Lerna")])])]),v._v(" "),l("h2",{attrs:{id:"构建工具与编译"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#构建工具与编译"}},[v._v("#")]),v._v(" 构建工具与编译")]),v._v(" "),l("h3",{attrs:{id:"任务化构建方式"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#任务化构建方式"}},[v._v("#")]),v._v(" 任务化构建方式")]),v._v(" "),l("ul",[l("li",[v._v("grunt")])]),v._v(" "),l("p",[v._v("2012 年 Grunt 发布首版[6]¹²，将处理过程定义为多个不同的任务，每个任务执行一个函数或插件；")]),v._v(" "),l("ul",[l("li",[v._v("gulp（文件流）")])]),v._v(" "),l("p",[v._v("2013 年 Gulp 发布首版[7]，并快速在同年发布到了 3.0 正式版，在 Grunt 抽象任务的基础上，Gulp 引入了流编程的概念，避免在执行复杂任务时，需要将编译中间结果放在临时文件夹的场景；")]),v._v(" "),l("ul",[l("li",[v._v("parcel")])]),v._v(" "),l("p",[v._v("2013 年⁴，Parcel[12] 发布首版，并在 2018 年发布 1.0 正式版，在当时它主打无配置启动项目；\nParcel 首版发布于 2013 年，但是它大规模进入公共视野是在 2017 年。")]),v._v(" "),l("ul",[l("li",[v._v("rollup")])]),v._v(" "),l("p",[v._v("2015 年，Rollup[13] 发布首版，并在 2019 年发布 1.0 正式版，它主打工具库的打包，相比 Webpack 配置更简单和轻量；")]),v._v(" "),l("h3",{attrs:{id:"系统化构建方式"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#系统化构建方式"}},[v._v("#")]),v._v(" 系统化构建方式")]),v._v(" "),l("ul",[l("li",[v._v("WebPack（模块依赖）")])]),v._v(" "),l("p",[v._v("2012 年 Webpack[8] 发布首版，并于 2014 年发布 1.0 正式版，它通过分析模块间依赖来决定编译过程，将可扩展点抽象为 loader 和 plugin。")]),v._v(" "),l("p",[v._v("2020 年，Webpack 5.0 发布，实现了多进程编译以优化计算密集型任务，并强化了缓存机制；")]),v._v(" "),l("p",[v._v("Webpack 最终能统治社区，离不开它的三个王牌能力：一切皆可打包、本地模块热加载（HMR）和按需加载。而 Webpack 的弱项是其配置的繁琐和复杂，在这个阶段出现的大部分新包，也是在牺牲了部分能力的前提下，去强化封装性和简化复杂度：")]),v._v(" "),l("h2",{attrs:{id:"bundleless-性能优化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#bundleless-性能优化"}},[v._v("#")]),v._v(" Bundleless（性能优化）")]),v._v(" "),l("ul",[l("li",[v._v("SnowPack")])]),v._v(" "),l("p",[v._v("2020 年，Snowpack[14] 发布首版正式版，主打不打包项目依赖的模块（Bundleless），而是直接依赖 CDN 提供的模块文件，大大提升了本地环境运行速度；")]),v._v(" "),l("ul",[l("li",[v._v("Vite")])]),v._v(" "),l("p",[v._v("2020 年，Vite[15] 发布首版，同样主打 Bundleless。")]),v._v(" "),l("h3",{attrs:{id:"代码编译"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#代码编译"}},[v._v("#")]),v._v(" 代码编译")]),v._v(" "),l("ul",[l("li",[v._v("Babel")])]),v._v(" "),l("p",[v._v("2014 年，Babel[11] 发布首版³，重心放在对 JavaScript 转译，使得尚在提案阶段的语言特性能兼容。")]),v._v(" "),l("ul",[l("li",[v._v("SWC")])]),v._v(" "),l("p",[v._v("2019 年，基于 Rust 实现的 SWC[21] 发布首版，对标 Babel，显著提升了性能；")]),v._v(" "),l("ul",[l("li",[v._v("Esbuild")])]),v._v(" "),l("p",[v._v("2020 年，使用 go 实现的 esbuild[22] 发布首版，相比 SWC 更聚焦于 TypeScript 和 JavaScript 的转译，性能更快；")]),v._v(" "),l("ol",[l("li",[v._v("它基于 golang，就是比 node.js 快。")]),v._v(" "),l("li",[v._v("高度并行的处理算法。")]),v._v(" "),l("li",[v._v("节制的功能设计。")]),v._v(" "),l("li",[v._v("重写核心工具链。")])]),v._v(" "),l("h2",{attrs:{id:"组件化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[v._v("#")]),v._v(" 组件化")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("WebComponent")])]),v._v(" "),l("li",[l("p",[v._v("UI组件库")]),v._v(" "),l("ul",[l("li",[v._v("Antd")]),v._v(" "),l("li",[v._v("ElementUI")])])])]),v._v(" "),l("h2",{attrs:{id:"标准化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#标准化"}},[v._v("#")]),v._v(" 标准化")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("脚手架")])]),v._v(" "),l("li",[l("p",[v._v("监控")]),v._v(" "),l("ul",[l("li",[v._v("sentry ：从监控错误、错误统计图表、多重标签过滤和标签统计到触发告警，这一整套都很完善，团队项目需要充钱，而且数据量越大钱越贵")]),v._v(" "),l("li",[v._v("fundebug：除了监控错误，还可以录屏，也就是记录错误发生的前几秒用户的所有操作，压缩后的体积只有几十 KB，但操作略微繁琐")]),v._v(" "),l("li",[v._v("webfunny：也是含有监控错误的功能，可以支持千万级别日PV量，额外的亮点是可以远程调试、性能分析，也可以docker私有化部署（免费）,业务代码加密过")])])]),v._v(" "),l("li",[l("p",[v._v("安全")])])]),v._v(" "),l("h2",{attrs:{id:"自动化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#自动化"}},[v._v("#")]),v._v(" 自动化")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("CI/CD")])]),v._v(" "),l("li",[l("p",[v._v("自动化测试")])])]),v._v(" "),l("h2",{attrs:{id:"规范化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#规范化"}},[v._v("#")]),v._v(" 规范化")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("Eslint")])]),v._v(" "),l("li",[l("p",[v._v("StyleLint")])]),v._v(" "),l("li",[l("p",[v._v("Prettier")])]),v._v(" "),l("li",[l("p",[v._v("Lint-staged")])])]),v._v(" "),l("h2",{attrs:{id:"全栈化-前后端一体化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#全栈化-前后端一体化"}},[v._v("#")]),v._v(" 全栈化（前后端一体化）")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("同构渲染 SSR")])]),v._v(" "),l("li",[l("p",[v._v("BFF Sever")])]),v._v(" "),l("li",[l("p",[v._v("GraphQL")])]),v._v(" "),l("li",[l("p",[v._v("SeverLess")])])]),v._v(" "),l("h2",{attrs:{id:"其他"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[v._v("#")]),v._v(" 其他")]),v._v(" "),l("ul",[l("li",[v._v("微前端")]),v._v(" "),l("li",[v._v("跨端融合")]),v._v(" "),l("li",[v._v("智能化")]),v._v(" "),l("li",[v._v("平台化")]),v._v(" "),l("li",[v._v("低码化")])])])}),[],!1,null,null,null);_.default=t.exports}}]);