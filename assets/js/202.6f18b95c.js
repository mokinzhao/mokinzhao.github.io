(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{621:function(a,e,t){"use strict";t.r(e);var s=t(16),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"webpack的-loader-和-plugin-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的-loader-和-plugin-区别"}},[a._v("#")]),a._v(" webpack的 loader 和 plugin 区别")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("loader\n加载器，webpack原生只能解析js文件，\n通过配置一些加载器能加载和解析非js文件的能力")])]),a._v(" "),t("li",[t("p",[a._v("扩展webpack，让webpack更具灵活性\nwebpack构建过程中有很多事件，\n可以去监听这些事件，在合适的时机通过webpackAPI改变输出结果")])])]),a._v(" "),t("h2",{attrs:{id:"webpack-常用插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-常用插件"}},[a._v("#")]),a._v(" webpack 常用插件")]),a._v(" "),t("h2",{attrs:{id:"webpack-如何做代码拆分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-如何做代码拆分"}},[a._v("#")]),a._v(" webpack 如何做代码拆分")]),a._v(" "),t("h2",{attrs:{id:"webpack-tree-shaking-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-tree-shaking-原理"}},[a._v("#")]),a._v(" webpack tree shaking 原理")]),a._v(" "),t("h2",{attrs:{id:"webpack-动态导入原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-动态导入原理"}},[a._v("#")]),a._v(" webpack 动态导入原理")]),a._v(" "),t("h2",{attrs:{id:"webpack-热更新原理-怎么找到对应的局部模块做更新的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-热更新原理-怎么找到对应的局部模块做更新的"}},[a._v("#")]),a._v(" webpack 热更新原理，怎么找到对应的局部模块做更新的")]),a._v(" "),t("h2",{attrs:{id:"webpack5-新特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack5-新特性"}},[a._v("#")]),a._v(" webpack5 新特性")]),a._v(" "),t("h2",{attrs:{id:"less-loader-的-less-转成-css-的底层原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#less-loader-的-less-转成-css-的底层原理"}},[a._v("#")]),a._v(" less-loader 的 less 转成 css 的底层原理")]),a._v(" "),t("h2",{attrs:{id:"webpack-bundle、chunk、module的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-bundle、chunk、module的区别"}},[a._v("#")]),a._v(" Webpack bundle、chunk、module的区别")]),a._v(" "),t("h2",{attrs:{id:"hash-chunkhash-contenthash-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-chunkhash-contenthash-的区别"}},[a._v("#")]),a._v(" hash/chunkhash/contenthash 的区别")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("hash 反映了项目的构建版本，因此同一次构建过程中生成的 hash 都是一样的。换句话说，如果项目里某个模块发生更改，触发项目的重新构建，那么文件的 hash 值将会相应地改变。如果使用 hash 策略，存在一个问题：即使某个模块的内容压根没有改变，但是重新构建后会产生一个新的 hash 值，使得缓存命中率较低。")])]),a._v(" "),t("li",[t("p",[a._v("针对以上问题，chunkhash 和 contenthash 就不一样了，chunkhash 会根据入口文件（Entry）进行依赖解析。")])]),a._v(" "),t("li",[t("p",[a._v("contenthash 则会根据文件具体内容，生成 hash 值。")])])]),a._v(" "),t("h2",{attrs:{id:"推荐阅读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[a._v("#")]),a._v(" 推荐阅读")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/7023242274876162084#heading-2",target:"_blank",rel:"noopener noreferrer"}},[a._v("透过分析 webpack 面试题，构建 webpack5.x 知识体系"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/7002839760792190989#heading-9",target:"_blank",rel:"noopener noreferrer"}},[a._v("webpack 十连问你能接住几题"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/7031546400034947108",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack5核心打包原理全流程解析"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6859538537830858759#heading-21",target:"_blank",rel:"noopener noreferrer"}},[a._v("面试官：webpack原理都不会？"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/hqcl2-4G63GSRoUroRNstg",target:"_blank",rel:"noopener noreferrer"}},[a._v("webpack loader 与plugin 开发实战 —— 点击 vue 页面元素跳转到对应的 vscode 代码"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);