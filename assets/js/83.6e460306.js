(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{501:function(t,s,e){"use strict";e.r(s);var a=e(16),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"flex布局深入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex布局深入"}},[t._v("#")]),t._v(" FLex布局深入")]),t._v(" "),e("h3",{attrs:{id:"flex-缩写语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-缩写语法"}},[t._v("#")]),t._v(" FLex 缩写语法")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("flex:initial表示默认的flex状态，无需专门设置，适合小控件元素的分布布局，或者某一项内容动态变化的布局；")])]),t._v(" "),e("li",[e("p",[t._v("flex:0适用场景较少，适合设置在替换元素的父元素上；")])]),t._v(" "),e("li",[e("p",[t._v("flex:none适用于不换行的内容固定或者较少的小控件元素上，如按钮。")])]),t._v(" "),e("li",[e("p",[t._v("flex:1适合等分布局；")])]),t._v(" "),e("li",[e("p",[t._v("flex:auto适合基于内容动态适配的布局；")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2020/10/css-flex-0-1-none/",target:"_blank",rel:"noopener noreferrer"}},[t._v("flex:0 flex:1 flex:none flex:auto应该在什么场景下使用？"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"推荐阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[t._v("#")]),t._v(" 推荐阅读")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7063823914136256543",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么要使用flex布局?"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6881565341856563213",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flex布局\\弹性布局--面试题"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7019075844664459278",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出之 Flex 弹性布局"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"gird网格布局深入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gird网格布局深入"}},[t._v("#")]),t._v(" Gird网格布局深入")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6854573220306255880",target:"_blank",rel:"noopener noreferrer"}},[t._v("最强大的 CSS 布局 —— Grid 布局"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7019077784400035847",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出之 Grid 网格布局"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"移动端适配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端适配"}},[t._v("#")]),t._v(" 移动端适配")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("viewport")])]),t._v(" "),e("li",[e("p",[t._v("rem/media query")])]),t._v(" "),e("li",[e("p",[t._v("设计上：隐藏/折行/自适应")])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7046169975706353701",target:"_blank",rel:"noopener noreferrer"}},[t._v("2022 年移动端适配方案指南 — 全网最新最全"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7057156620320505863",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动端适配解决方案"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7061866685166256142",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动端适配解决方案二"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"css3中有哪些新特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css3中有哪些新特性"}},[t._v("#")]),t._v(" CSS3中有哪些新特性")]),t._v(" "),e("ul",[e("li",[t._v("新增各种CSS选择器 （: not(.input)：所有 class 不是“input”的节点）")]),t._v(" "),e("li",[t._v("圆角 （border-radius:8px）")]),t._v(" "),e("li",[t._v("多列布局 （multi-column layout）")]),t._v(" "),e("li",[t._v("阴影和反射 （Shadoweflect）")]),t._v(" "),e("li",[t._v("文字特效 （text-shadow）")]),t._v(" "),e("li",[t._v("文字渲染 （Text-decoration）")]),t._v(" "),e("li",[t._v("线性渐变 （gradient）")]),t._v(" "),e("li",[t._v("旋转 （transform）")]),t._v(" "),e("li",[t._v("增加了旋转,缩放,定位,倾斜,动画,多背景")])]),t._v(" "),e("h2",{attrs:{id:"css-优化和提高性能的方法有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-优化和提高性能的方法有哪些"}},[t._v("#")]),t._v(" CSS 优化和提高性能的方法有哪些？")]),t._v(" "),e("ul",[e("li",[t._v("加载性能：\n（1）css压缩：将写好的css进行打包压缩，可以减小文件体积。")])]),t._v(" "),e("p",[t._v("（2）css单一样式：当需要下边距和左边距的时候，很多时候会选择使用 margin:top 0 bottom 0；但margin-bottom:bottom;margin-left:left;执行效率会更高。")]),t._v(" "),e("p",[t._v("（3）减少使用@import，建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")]),t._v(" "),e("ul",[e("li",[t._v("选择器性能：")])]),t._v(" "),e("p",[t._v("（1）关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；")]),t._v(" "),e("p",[t._v("（2）如果规则拥有ID选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹配它们了）。")]),t._v(" "),e("p",[t._v("（3）避免使用通配规则，如*{}计算次数惊人，只对需要用到的元素进行选择。")]),t._v(" "),e("p",[t._v("（4）尽量少的去对标签进行选择，而是用class。")]),t._v(" "),e("p",[t._v("（5）尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过三层，更多的使用类来关联每一个标签元素。")]),t._v(" "),e("p",[t._v("（6）了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。")]),t._v(" "),e("ul",[e("li",[t._v("渲染性能：")])]),t._v(" "),e("p",[t._v("（1）慎重使用高性能属性：浮动、定位。")]),t._v(" "),e("p",[t._v("（2）尽量减少页面重排、重绘。")]),t._v(" "),e("p",[t._v("（3）去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。")]),t._v(" "),e("p",[t._v("（4）属性值为0时，不加单位。")]),t._v(" "),e("p",[t._v("（5）属性值为浮动小数0.**，可以省略小数点之前的0。")]),t._v(" "),e("p",[t._v("（6）标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")]),t._v(" "),e("p",[t._v("（7）不使用@import前缀，它会影响css的加载速度。")]),t._v(" "),e("p",[t._v("（8）选择器优化嵌套，尽量避免层级过深。")]),t._v(" "),e("p",[t._v("（9）css雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清楚，再使用。")]),t._v(" "),e("p",[t._v("（10）正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")]),t._v(" "),e("p",[t._v("（11）不滥用web字体。对于中文网站来说WebFonts可能很陌生，国外却很流行。web fonts通常体积庞大，而且一些浏览器在下载web fonts时会阻塞页面渲染损伤性能。")]),t._v(" "),e("ul",[e("li",[t._v("可维护性、健壮性：")])]),t._v(" "),e("p",[t._v("（1）将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。")]),t._v(" "),e("p",[t._v("（2）样式与内容分离：将css代码定义到外部css中。")]),t._v(" "),e("h2",{attrs:{id:"sass、less-是什么-为什么要使用他们"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sass、less-是什么-为什么要使用他们"}},[t._v("#")]),t._v(" Sass、Less 是什么？为什么要使用他们？")]),t._v(" "),e("p",[t._v("他们都是 CSS 预处理器，是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS。 例如 Less 是一种动态样式语言，将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函数，LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可以在服务端运行 (借助 Node.js)。\n为什么要使用它们？")]),t._v(" "),e("ul",[e("li",[t._v("结构清晰，便于扩展。 可以方便地屏蔽浏览器私有语法差异。封装对浏览器语法差异的重复处理， 减少无意义的机械劳动。")]),t._v(" "),e("li",[t._v("可以轻松实现多重继承。 完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。")])]),t._v(" "),e("h2",{attrs:{id:"媒体查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询"}},[t._v("#")]),t._v(" 媒体查询")]),t._v(" "),e("p",[t._v("媒体查询由⼀个可选的媒体类型和零个或多个使⽤媒体功能的限制了样式表范围的表达式组成，例如宽度、⾼度和颜⾊。媒体查询，添加⾃CSS3，允许内容的呈现针对⼀个特定范围的输出设备⽽进⾏裁剪，⽽不必改变内容本身，适合web⽹⻚应对不同型号的设备⽽做出对应的响应适配。")]),t._v(" "),e("p",[t._v("媒体查询包含⼀个可选的媒体类型和满⾜CSS3规范的条件下，包含零个或多个表达式，这些表达式描述了媒体特征，最终会被解析为true或false。如果媒体查询中指定的媒体类型匹配展示⽂档所使⽤的设备类型，并且所有的表达式的值都是true，那么该媒体查询的结果为true。那么媒体查询内的样式将会⽣效。")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("\x3c!-- link元素中的CSS媒体查询 --\x3e \n<link rel="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylesheet"')]),t._v(" media="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(max-width: 800px)"')]),t._v(" href="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.css"')]),t._v(" /> \n\x3c!-- 样式表中的CSS媒体查询 --\x3e \n<style> \n"),e("span",{pre:!0,attrs:{class:"token atrule"}},[e("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".facet_sidebar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("简单来说，使用 @media 查询，可以针对不同的媒体类型定义不同的样式。@media 可以针对不同的屏幕尺寸设置不同的样式，特别是需要设置设计响应式的页面，@media 是非常有用的。当重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。")]),t._v(" "),e("h2",{attrs:{id:"关于-css-的动画与过渡问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于-css-的动画与过渡问题"}},[t._v("#")]),t._v(" 关于 CSS 的动画与过渡问题")]),t._v(" "),e("ol",[e("li",[t._v("animation、transition、transform、translate 这几个属性要搞清楚：")])]),t._v(" "),e("ul",[e("li",[t._v("animation：用于设置动画属性，他是一个简写的属性，包含6个属性")]),t._v(" "),e("li",[t._v("transition：用于设置元素的样式过度，和animation有着类似的效果，但细节上有很大的不同")]),t._v(" "),e("li",[t._v("transform：用于元素进行旋转、缩放、移动或倾斜，和设置样式的动画并没有什么关系")]),t._v(" "),e("li",[t._v("translate：translate只是transform的一个属性值，即移动，除此之外还有 scale 等")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("transition和animation的区别")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("transition是过度属性，强调过度，它的实现需要触发一个事件（比如鼠标移动上去，焦点，点击等）才执行动画。它类似于flash的补间动画，设置一个开始关键帧，一个结束关键帧。")])]),t._v(" "),e("li",[e("p",[t._v("animation是动画属性，它的实现不需要触发事件，设定好时间之后可以自己执行，且可以循环一个动画。它也类似于flash的补间动画，但是它可以设置多个关键帧（用@keyframe定义）完成动画。")])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/xiaohuochai/p/5391663.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 CSS 动画 animation"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/xiaohuochai/p/5347930.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 CSS 过渡 transition"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkwODIwMDY2OQ==&mid=2247488418&idx=1&sn=9a5fa7ccdbcbd205a1ad8854d6d7346e&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("你所不知道的CSS篇 【强烈建议收藏】"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.one-tab.com/page/SzN5kj7PQCyIkcu8WFT71w",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS面试题合集"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=r.exports}}]);