(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{712:function(v,_,a){"use strict";a.r(_);var t=a(16),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[v._v("#")]),v._v(" DNS")]),v._v(" "),a("h3",{attrs:{id:"dns-协议是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-协议是什么"}},[v._v("#")]),v._v(" DNS 协议是什么")]),v._v(" "),a("ul",[a("li",[v._v("概念")])]),v._v(" "),a("p",[v._v("DNS 是域名系统 (Domain Name System) 的缩写，提供的是一种主机名到 IP 地址的转换服务，就是我们常说的域名系统。它是一个由分层的 DNS 服务器组成的分布式数据库，是定义了主机如何查询这个分布式数据库的方式的应用层协议。能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。")]),v._v(" "),a("ul",[a("li",[v._v("作用")])]),v._v(" "),a("p",[v._v("将域名解析为IP地址，客户端向DNS服务器（DNS服务器有自己的IP地址）发送域名查询请求，DNS服务器告知客户机Web服务器的 IP 地址。")]),v._v(" "),a("h3",{attrs:{id:"dns同时使用tcp和udp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns同时使用tcp和udp协议"}},[v._v("#")]),v._v(" DNS同时使用TCP和UDP协议")]),v._v(" "),a("p",[a("strong",[v._v("DNS占用53号端口，同时使用TCP和UDP协议")])]),v._v(" "),a("ol",[a("li",[v._v("在区域传输的时候使用TCP协议")])]),v._v(" "),a("ul",[a("li",[a("p",[v._v("辅域名服务器会定时（一般3小时）向主域名服务器进行查询以便了解数据是否有变动。如有变动，会执行一次区域传送，进行数据同步。区域传送使用TCP而不是UDP，因为数据同步传送的数据量比一个请求应答的数据量要多得多。")])]),v._v(" "),a("li",[a("p",[v._v("TCP是一种可靠连接，保证了数据的准确性。")])])]),v._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[v._v("在域名解析的时候使用UDP协议")])]),v._v(" "),a("ul",[a("li",[v._v("客户端向DNS服务器查询域名，一般返回的内容都不超过512字节，用UDP传输即可。不用经过三次握手，这样DNS服务器负载更低，响应更快。理论上说，客户端也可以指定向DNS服务器查询时用TCP，但事实上，很多DNS服务器进行配置的时候，仅支持UDP查询包。")])]),v._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[v._v("DNS完整的查询过程")])]),v._v(" "),a("ul",[a("li",[v._v("首先会在浏览器的缓存中查找对应的IP地址，如果查找到直接返回，若找不到继续下一步")]),v._v(" "),a("li",[v._v("将请求发送给本地DNS服务器，在本地域名服务器缓存中查询，如果查找到，就直接将查找结果返回，若找不到继续下一步")]),v._v(" "),a("li",[v._v("本地DNS服务器向根域名服务器发送请求，根域名服务器会返回一个所查询域的顶级域名服务器地址")]),v._v(" "),a("li",[v._v("本地DNS服务器向顶级域名服务器发送请求，接受请求的服务器查询自己的缓存，如果有记录，就返回查询结果，如果没有就返回相关的下一级的权威域名服务器的地址")]),v._v(" "),a("li",[v._v("本地DNS服务器向权威域名服务器发送请求，域名服务器返回对应的结果")]),v._v(" "),a("li",[v._v("本地DNS服务器将返回结果保存在缓存中，便于下次使用")]),v._v(" "),a("li",[v._v("本地DNS服务器将返回结果返回给浏览器")])]),v._v(" "),a("p",[v._v("比如要查询 www.baidu.com 的 IP 地址，首先会在浏览器的缓存中查找是否有该域名的缓存，如果不存在就将请求发送到本地的 DNS 服务器中，本地DNS服务器会判断是否存在该域名的缓存，如果不存在，则向根域名服务器发送一个请求，根域名服务器返回负责 .com 的顶级域名服务器的 IP 地址的列表。然后本地 DNS 服务器再向其中一个负责 .com 的顶级域名服务器发送一个请求，负责 .com 的顶级域名服务器返回负责 .baidu 的权威域名服务器的 IP 地址列表。然后本地 DNS 服务器再向其中一个权威域名服务器发送一个请求，最后权威域名服务器返回一个对应的主机名的 IP 地址列表。")]),v._v(" "),a("h3",{attrs:{id:"迭代查询与递归查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代查询与递归查询"}},[v._v("#")]),v._v(" 迭代查询与递归查询")]),v._v(" "),a("p",[v._v("实际上，DNS解析是一个包含迭代查询和递归查询的过程。")]),v._v(" "),a("ul",[a("li",[v._v("递归查询指的是查询请求发出后，域名服务器代为向下一级域名服务器发出请求，最后向用户返回查询的最终结果。使用递归 查询，用户只需要发出一次查询请求。")]),v._v(" "),a("li",[v._v("迭代查询指的是查询请求后，域名服务器返回单次查询的结果。下一级的查询由用户自己请求。使用迭代查询，用户需要发出 多次的查询请求。")])]),v._v(" "),a("p",[v._v("一般我们向本地 DNS 服务器发送请求的方式就是递归查询，因为我们只需要发出一次请求，然后本地 DNS 服务器返回给我 们最终的请求结果。而本地 DNS 服务器向其他域名服务器请求的过程是迭代查询的过程，因为每一次域名服务器只返回单次 查询的结果，下一级的查询由本地 DNS 服务器自己进行。")]),v._v(" "),a("h3",{attrs:{id:"dns-记录和报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-记录和报文"}},[v._v("#")]),v._v(" DNS 记录和报文")]),v._v(" "),a("p",[v._v("DNS 服务器中以资源记录的形式存储信息，每一个 DNS 响应报文一般包含多条资源记录。一条资源记录的具体的格式为")]),v._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[v._v("（Name，Value，Type，"),a("span",{pre:!0,attrs:{class:"token constant"}},[v._v("TTL")]),v._v("）\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[v._v("其中 TTL 是资源记录的生存时间，它定义了资源记录能够被其他的 DNS 服务器缓存多长时间。")])]),v._v(" "),a("li",[a("p",[v._v("常用的一共有四种 Type 的值，分别是 A、NS、CNAME 和 MX ，不同 Type 的值，对应资源记录代表的意义不同：")]),v._v(" "),a("ul",[a("li",[v._v("如果 Type = A，则 Name 是主机名，Value 是主机名对应的 IP 地址。因此一条记录为 A 的资源记录，提供了标 准的主机名到 IP 地址的映射。")]),v._v(" "),a("li",[v._v("如果 Type = NS，则 Name 是个域名，Value 是负责该域名的 DNS 服务器的主机名。这个记录主要用于 DNS 链式 查询时，返回下一级需要查询的 DNS 服务器的信息。")]),v._v(" "),a("li",[v._v("如果 Type = CNAME，则 Name 为别名，Value 为该主机的规范主机名。该条记录用于向查询的主机返回一个主机名 对应的规范主机名，从而告诉查询主机去查询这个主机名的 IP 地址。主机别名主要是为了通过给一些复杂的主机名提供 一个便于记忆的简单的别名。")]),v._v(" "),a("li",[v._v("如果 Type = MX，则 Name 为一个邮件服务器的别名，Value 为邮件服务器的规范主机名。它的作用和 CNAME 是一 样的，都是为了解决规范主机名不利于记忆的缺点。")])])])]),v._v(" "),a("h2",{attrs:{id:"cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[v._v("#")]),v._v(" CDN")]),v._v(" "),a("h3",{attrs:{id:"cdn的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn的概念"}},[v._v("#")]),v._v(" CDN的概念")]),v._v(" "),a("p",[v._v("CDN（Content Delivery Network，内容分发网络）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("典型的CDN系统由下面三个部分组成：")])]),v._v(" "),a("li",[a("p",[v._v("分发服务系统： 最基本的工作单元就是Cache设备，cache（边缘cache）负责直接响应最终用户的访问请求，把缓存在本地的内容快速地提供给用户。同时cache还负责与源站点进行内容同步，把更新的内容以及本地没有的内容从源站点获取并保存在本地。Cache设备的数量、规模、总-服务能力是衡量一个CDN系统服务能力的最基本的指标。")])]),v._v(" "),a("li",[a("p",[v._v("负载均衡系统： 主要功能是负责对所有发起服务请求的用户进行访问调度，确定提供给用户的最终实际访问地址。两级调度体系分为全局负载均衡（GSLB）和本地负载均衡（SLB）。全局负载均-衡主要根据用户就近性原则，通过对每个服务节点进行“最优”判断，确定向用户提供服务的cache的物理位置。本地负载均衡主要负责节点内部的设备负载均衡")])]),v._v(" "),a("li",[a("p",[v._v("运营管理系统： 运营管理系统分为运营管理和网络管理子系统，负责处理业务层面的与外界系统交互所必须的收集、整理、交付工作，包含客户管理、产品管理、计费管理、统计分析等功能。")])])]),v._v(" "),a("h3",{attrs:{id:"cdn的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn的作用"}},[v._v("#")]),v._v(" CDN的作用")]),v._v(" "),a("p",[v._v("CDN一般会用来托管Web资源（包括文本、图片和脚本等），可供下载的资源（媒体文件、软件、文档等），应用程序（门户网站等）。使用CDN来加速这些资源的访问。")]),v._v(" "),a("ol",[a("li",[a("p",[v._v("在性能方面，引入CDN的作用在于：")]),v._v(" "),a("ul",[a("li",[v._v("用户收到的内容来自最近的数据中心，延迟更低，内容加载更快")]),v._v(" "),a("li",[v._v("部分资源请求分配给了CDN，减少了服务器的负载")])])]),v._v(" "),a("li",[a("p",[v._v("在安全方面，CDN有助于防御DDoS、MITM等网络攻击：")]),v._v(" "),a("ul",[a("li",[v._v("针对DDoS：通过监控分析异常流量，限制其请求频率")]),v._v(" "),a("li",[v._v("针对MITM：从源服务器到 CDN 节点到 ISP（Internet Service Provider），全链路 HTTPS 通信")])])])]),v._v(" "),a("p",[v._v("除此之外，CDN作为一种基础的云服务，同样具有资源托管、按需扩展（能够应对流量高峰）等方面的优势。")]),v._v(" "),a("h3",{attrs:{id:"cdn的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn的原理"}},[v._v("#")]),v._v(" CDN的原理")]),v._v(" "),a("p",[v._v("CDN和DNS有着密不可分的联系，先来看一下DNS的解析域名过程，在浏览器输入 www.test.com 的解析过程如下：")]),v._v(" "),a("p",[v._v("（1）检查浏览器缓存\n（2）检查操作系统缓存，常见的如hosts文件\n（3）检查路由器缓存\n（4）如果前几步都没没找到，会向ISP(网络服务提供商)的LDNS服务器查询\n（5）如果LDNS服务器没找到，会向根域名服务器(Root Server)请求解析，分为以下几步：")]),v._v(" "),a("ul",[a("li",[v._v("根服务器返回顶级域名(TLD)服务器如.com，.cn，.org等的地址，该例子中会返回.com的地址")]),v._v(" "),a("li",[v._v("接着向顶级域名服务器发送请求，然后会返回次级域名(SLD)服务器的地址，本例子会返回.test的地址")]),v._v(" "),a("li",[v._v("接着向次级域名服务器发送请求，然后会返回通过域名查询到的目标IP，本例子会返回www.test.com的地址")]),v._v(" "),a("li",[v._v("Local DNS Server会缓存结果，并返回给用户，缓存在系统中")])]),v._v(" "),a("h4",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[v._v("#")]),v._v(" 工作原理")]),v._v(" "),a("ul",[a("li",[v._v("用户未使用CDN缓存资源的过程：")])]),v._v(" "),a("ol",[a("li",[v._v("浏览器通过DNS对域名进行解析（就是上面的DNS解析过程），依次得到此域名对应的IP地址")]),v._v(" "),a("li",[v._v("浏览器根据得到的IP地址，向域名的服务主机发送数据请求")]),v._v(" "),a("li",[v._v("服务器向浏览器返回响应数据")])]),v._v(" "),a("ul",[a("li",[v._v("用户使用CDN缓存资源的过程：")])]),v._v(" "),a("ol",[a("li",[v._v("对于点击的数据的URL，经过本地DNS系统的解析，发现该URL对应的是一个CDN专用的DNS服务器，DNS系统就会将域名解析权交给CNAME指向的CDN专用的DNS服务器。")]),v._v(" "),a("li",[v._v("CND专用DNS服务器将CND的全局负载均衡设备IP地址返回给用户")]),v._v(" "),a("li",[v._v("用户向CDN的全局负载均衡设备发起数据请求")]),v._v(" "),a("li",[v._v("CDN的全局负载均衡设备根据用户的IP地址，以及用户请求的内容URL，选择一台用户所属区域的区域负载均衡设备，告诉用户向这台设备发起请求")]),v._v(" "),a("li",[v._v("区域负载均衡设备选择一台合适的缓存服务器来提供服务，将该缓存服务器的IP地址返回给全局负载均衡设备")]),v._v(" "),a("li",[v._v("全局负载均衡设备把服务器的IP地址返回给用户")]),v._v(" "),a("li",[v._v("用户向该缓存服务器发起请求，缓存服务器响应用户的请求，将用户所需内容发送至用户终端。")])]),v._v(" "),a("p",[v._v("如果缓存服务器没有用户想要的内容，那么缓存服务器就会向它的上一级缓存服务器请求内容，以此类推，直到获取到需要的资源。最后如果还是没有，就会回到自己的服务器去获取资源。")]),v._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a4635b395fb64aaab8417f63e64291d4~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),v._v(" "),a("p",[v._v("CNAME（意为：别名）：在域名解析中，实际上解析出来的指定域名对应的IP地址，或者该域名的一个CNAME，然后再根据这个CNAME来查找对应的IP地址。")]),v._v(" "),a("h3",{attrs:{id:"cdn的使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn的使用场景"}},[v._v("#")]),v._v(" CDN的使用场景")]),v._v(" "),a("ul",[a("li",[v._v("使用第三方的CDN服务")])]),v._v(" "),a("p",[v._v("如果想要开源一些项目，可以使用第三方的CDN服务")]),v._v(" "),a("ul",[a("li",[v._v("使用CDN进行静态资源的缓存")])]),v._v(" "),a("p",[v._v("将自己网站的静态资源放在CDN上，比如js、css、图片等。可以将整个项目放在CDN上，完成一键部署。")]),v._v(" "),a("ul",[a("li",[v._v("直播传送")])]),v._v(" "),a("p",[v._v("直播本质上是使用流媒体进行传送，CDN也是支持流媒体传送的，所以直播完全可以使用CDN来提高访问速度。CDN在处理流媒体的时候与处理普通静态文件有所不同，普通文件如果在边缘节点没有找到的话，就会去上一层接着寻找，但是流媒体本身数据量就非常大，如果使用回源的方式，必然会带来性能问题，所以流媒体一般采用的都是主动推送的方式来进行。")]),v._v(" "),a("h3",{attrs:{id:"quic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quic"}},[v._v("#")]),v._v(" QUIC")]),v._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7066993430102016037",target:"_blank",rel:"noopener noreferrer"}},[v._v("QUIC——快速UDP网络连接协议"),a("OutboundLink")],1)]),v._v(" "),a("h2",{attrs:{id:"推荐阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[v._v("#")]),v._v(" 推荐阅读")]),v._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/6oA4SXvC868JnW7hp4_CcQ",target:"_blank",rel:"noopener noreferrer"}},[v._v("前端同学需要了解的DNS与CDN知识"),a("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=e.exports}}]);