(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{608:function(s,n,e){"use strict";e.r(n);var t=e(16),r=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),e("p",[s._v("Nest.js 是“Angular 的服务端实现”，基于装饰器。Nest.js 与其他前端服务框架或库的设计思路完全不同。我们通过查看请求生命周期中的几个节点的用法来体验下 Nest.js 的设计方式。")]),s._v(" "),e("p",[s._v("先来看下 Nest.js 完整的的生命周期：")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("收到请求\n中间件\n全局绑定的中间件\n路径中指定的 Module 绑定的中间件\n守卫\n全局守卫\nController 守卫\nRoute 守卫\n拦截器（Controller 之前）\n全局\nController 拦截器\nRoute 拦截器\n管道\n全局管道\nController 管道\nRoute 管道\nRoute 参数管道\nController（方法处理器）\n服务\n拦截器（Controller 之后）\nRouter 拦截器\nController 拦截器\n全局拦截器\n异常过滤器\n路由\n控制器\n全局\n服务器响应\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[s._v("可以看到根据功能特点拆分的比较细，其中拦截器在 Controller 前后都有，与 Koa 洋葱圈模型类似")]),s._v(" "),e("h2",{attrs:{id:"推荐阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[s._v("#")]),s._v(" 推荐阅读")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7078847428455530526",target:"_blank",rel:"noopener noreferrer"}},[s._v("这可能是你看过最全的 「NestJS」 教程了"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/qcy5sL0sV6wnxif8EEBrMQ",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nest.js 用了 Express 但也没完全用"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/fs7EPC8lzOABHhj3ayS0Jw",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nest.js 是如何实现 AOP 架构的？"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/1r6YST7erdiJislpOoCSPw",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nest.js 模块机制的概念和实现原理"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);