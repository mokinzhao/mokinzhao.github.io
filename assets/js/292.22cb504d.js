(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{715:function(s,t,a){"use strict";a.r(t);var n=a(16),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"刷题方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#刷题方法"}},[s._v("#")]),s._v(" 刷题方法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://vp-blog-img.oss-cn-shanghai.aliyuncs.com/2021/algorithm/00%E5%87%86%E5%A4%87%E5%BC%80%E5%A7%8B-%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("五毒神掌（1题做5遍）\n"),a("ol",[a("li",[s._v("读题、思考（5分钟）")]),s._v(" "),a("li",[s._v("第1遍，直接看解法，比较解法优劣")]),s._v(" "),a("li",[s._v("第2遍，背诵、默写编码、调试、通过")]),s._v(" "),a("li",[s._v("第3遍，过一天再写")]),s._v(" "),a("li",[s._v("第4遍，过一周再写")]),s._v(" "),a("li",[s._v("第5遍，面试前再写")])])]),s._v(" "),a("li",[s._v("切题四步骤\n"),a("ol",[a("li",[s._v("审清题目、思考、询问面试官（2分钟）")]),s._v(" "),a("li",[s._v("思考多种解法（3分钟）时间、空间最优,渐进、加强")]),s._v(" "),a("li",[s._v("编码（手写）")]),s._v(" "),a("li",[s._v("测试（用例)")])])]),s._v(" "),a("li",[s._v("学习方式（Outliers）\n"),a("ol",[a("li",[s._v("切碎知识点\n梳理主干、分支\n知识大纲\n分类回顾")]),s._v(" "),a("li",[s._v("刻意练习,过遍数（做透初中级题扎实基本功练习弱项)")]),s._v(" "),a("li",[s._v("寻求反馈,及时反馈、主动反馈（看评论、题解）,被动反馈 CodeView")])])])]),s._v(" "),a("h2",{attrs:{id:"知识大纲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识大纲"}},[s._v("#")]),s._v(" 知识大纲")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://vp-blog-img.oss-cn-shanghai.aliyuncs.com/2021/algorithm/01%E8%84%91%E5%9B%BE%E6%A2%B3%E7%90%86-%E7%9F%A5%E8%AF%86%E5%88%86%E7%B1%BB.png",alt:""}}),s._v(" "),a("img",{attrs:{src:"https://vp-blog-img.oss-cn-shanghai.aliyuncs.com/2021/algorithm/02%E8%84%91%E5%9B%BE%E6%A2%B3%E7%90%86-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png",alt:""}}),s._v(" "),a("img",{attrs:{src:"https://vp-blog-img.oss-cn-shanghai.aliyuncs.com/2021/algorithm/03%E8%84%91%E5%9B%BE%E6%A2%B3%E7%90%86-%E7%AE%97%E6%B3%95.png",alt:""}}),s._v(" "),a("img",{attrs:{src:"https://vp-blog-img.oss-cn-shanghai.aliyuncs.com/2021/algorithm/04%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80-%E6%97%B6%E7%A9%BA%E5%A4%8D%E6%9D%82%E5%BA%A6.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"常用语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用语法"}},[s._v("#")]),s._v(" 常用语法")]),s._v(" "),a("h3",{attrs:{id:"while"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[s._v("#")]),s._v(" while")]),s._v(" "),a("ol",[a("li",[s._v("先判断后循环")]),s._v(" "),a("li",[s._v("不知道循环次数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("格式")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     执行条件\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   （"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v("不是条件判断，不转换布尔值，只条件判断）\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v("循环遵循的规则：只有条件成立时，循环才会执行\n特别注意：在循环中，设定条件时，一定要注意别设置死循环（没有终点）\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"do-while"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while"}},[s._v("#")]),s._v(" do while")]),s._v(" "),a("ol",[a("li",[s._v("先循环后判断")]),s._v(" "),a("li",[s._v("不知道循环次数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    格式： "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             执行程序\n           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v("循环遵循的规则：           \n     不管条件是否成立，都会先执行一次程序\n     执行完后，再判断条件是否循环\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[s._v("#")]),s._v(" for")]),s._v(" "),a("ol",[a("li",[s._v("先判断后执行")]),s._v(" "),a("li",[s._v("知道循环次数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("格式： "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" 初始化变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("循环执行条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("变量如何变化"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              执行程序\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("循环遵循的规则：  \n       只有条件成立时，循环才会执行\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("循环是"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v("循环的语法糖\n       他们两的功能完全一样。\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//例子：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首先它和forEach,forof一样不可以遍历对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//解决办法：就是把对象先转化为数组类型- -")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有一个对象：")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用Object.keys属性转化")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最后就可以用来遍历了")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出结果就能出来了，forEach，for of同理")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"foreach-可以三个参数-第一个是value-第二个是index-第三个是数组体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreach-可以三个参数-第一个是value-第二个是index-第三个是数组体"}},[s._v("#")]),s._v(" forEach（可以三个参数，第一个是value，第二个是index，第三个是数组体）")]),s._v(" "),a("ul",[a("li",[s._v("定义：用于调用数组的每个元素，并将元素传递给回调函数")]),s._v(" "),a("li",[s._v("缺点：不能同时遍历多个集合，在遍历的时候无法修改和删除集合数据，")]),s._v(" "),a("li",[s._v("方法不能使用break，continue语句跳出循环，或者使用return从函数体返回，对于空数组不会执行回调函数")]),s._v(" "),a("li",[s._v("优点：便利的时候更加简洁，效率和for循环相同，不用关心集合下标的问题，减少了出错的效率")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们先用它来遍历数组")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" arry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出结果为9 8 7 6 5 4")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首先有人疑问它能不能用来遍历对象（一开始我也不知道）？")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们用它来遍历对象试试可不可以")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("d")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("oObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出结果会是obj.forEach is not a function，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//所以forEach不可以遍历对象，这也是它和for in的一个区别")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"for-in-它大部分用于遍历对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in-它大部分用于遍历对象"}},[s._v("#")]),s._v(" for in （它大部分用于遍历对象）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("定义：用于循环遍历数组或对象属性，fot in循环里面的index是string类型的，\n代码每执行一次，就会对数组的元素或者对象的属性进行一次操作")])]),s._v(" "),a("li",[a("p",[s._v("缺点：某些情况下，会出现随机顺序的遍历，因为里面的值是string类型，所以\n增加了转换过程，因此开销较大")])]),s._v(" "),a("li",[a("p",[s._v("优点：可以遍历数组的键名，遍历对象简洁方便")])])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首先遍历对象")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"老王"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("city")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"大唐"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   输出结果为：老王"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("大唐\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//其次在尝试一些数组")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" array"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" arry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//能输出出来，证明也是可以的")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"for-of"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-of"}},[s._v("#")]),s._v(" for of")]),s._v(" "),a("ul",[a("li",[s._v("定义：可遍历map，object,array,set string等）用来遍历数据，比如组中的值")]),s._v(" "),a("li",[s._v("优点：避免了for in的所有缺点，可以使用break,continue和return，不仅支持数组的遍历，还可以遍历类似数组的对象，支持字符串的遍历,最简洁，最直接的遍历数组的语法,支持map和Set对象遍历")]),s._v(" "),a("li",[s._v("缺点：不适用于处理原有的原生对象（原生对象是一个子集，包含一些在运动过程中动态创建的对象）")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//遍历数组")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nick"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"freddy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mike"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"james"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//暑促结果为nice freddy mike james")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//遍历对象")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"老王"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("city")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"唐山"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们发现它是不可以的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但是它和forEach有个解决方法，结尾介绍")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"break-和-continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break-和-continue"}},[s._v("#")]),s._v(" break 和 continue")]),s._v(" "),a("ol",[a("li",[s._v("break 和 continue关键字都可以用在 for 和 while 循环结构中，表示跳出循环；")]),s._v(" "),a("li",[s._v("break：直接跳出循环")]),s._v(" "),a("li",[s._v("continue 语句用在循环结构内，用于跳过本次循环中剩余的代码，并在表达式的值为真时，继续执行下一次循环。")])]),s._v(" "),a("h2",{attrs:{id:"常用数学函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用数学函数"}},[s._v("#")]),s._v(" 常用数学函数")]),s._v(" "),a("h3",{attrs:{id:"math"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[s._v("#")]),s._v(" Math")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Math.max() 函数返回一组数中的最大值。")])]),s._v(" "),a("li",[a("p",[s._v("Math.min() 返回零个或更多个数值的最小值。")])]),s._v(" "),a("li",[a("p",[s._v("Math.abs() Math.abs(x) 函数返回指定数字 “x“ 的绝对值")])]),s._v(" "),a("li",[a("p",[s._v("Math.floor() 返回小于或等于一个给定数字的最大整数")])])]),s._v(" "),a("h2",{attrs:{id:"常用位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用位运算"}},[s._v("#")]),s._v(" 常用位运算")]),s._v(" "),a("p",[s._v("运算符\t描述\t运算规则")]),s._v(" "),a("ul",[a("li",[s._v("&\t与\t两个位都为1时，结果才为1")]),s._v(" "),a("li",[a("code"),s._v("\t或")]),s._v(" "),a("li",[s._v("^\t异或\t两个位相同为0，相异为1")]),s._v(" "),a("li",[s._v("~\t取反\t0变1，1变0")]),s._v(" "),a("li",[s._v("’<<‘\t左移\t各二进制位全部左移若干位，高位丢弃，低位补0")]),s._v(" "),a("li",[s._v("‘>>’\t右移\t各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃")])]),s._v(" "),a("ol",[a("li",[s._v("左移运算符（<<）\n定义： 将一个运算对象的各二进制位全部左移若干位，左边的二进制位丢弃，右边补0。\n设 a=1010 1110，a = a<< 2 将a的二进制位左移2位、右补0，即得a=1011 1000。\n若左移时舍弃的高位不包含1，则每左移一位，相当于该数乘以2。")]),s._v(" "),a("li",[s._v("右移运算符（>>）\n定义： 将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。\n例如：a=a>>2 将a的二进制位右移2位，左补0 或者 左补1得看被移数是正还是负。\n操作数每右移一位，相当于该数除以2。")])]),s._v(" "),a("h2",{attrs:{id:"常用算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用算法"}},[s._v("#")]),s._v(" 常用算法")]),s._v(" "),a("h3",{attrs:{id:"双指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[s._v("#")]),s._v(" 双指针")]),s._v(" "),a("ul",[a("li",[s._v("对撞指针")])]),s._v(" "),a("p",[s._v("什么时候你需要联想到对撞指针？\n这里我给大家两个关键字——“有序”和“数组”。\n没错，见到这两个关键字，立刻把双指针法调度进你的大脑内存。普通双指针走不通，立刻想对撞指针！")]),s._v(" "),a("ol",[a("li",[s._v("N数之和")]),s._v(" "),a("li",[s._v("盛水最多的容器")])]),s._v(" "),a("ul",[a("li",[s._v("快慢指针")])]),s._v(" "),a("ol",[a("li",[s._v("环形链表")]),s._v(" "),a("li",[s._v("链表中环的入口节点")]),s._v(" "),a("li",[s._v("最长连续递增序列")])]),s._v(" "),a("ul",[a("li",[s._v("固定间距指针")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("一次遍历 求链表中的中点")])]),s._v(" "),a("li",[a("p",[s._v("一次遍历 求链表的倒数第k个元素")])]),s._v(" "),a("li",[a("p",[s._v("固定窗口大小的滑动窗口")])])]),s._v(" "),a("h3",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[s._v("#")]),s._v(" 递归")])])}),[],!1,null,null,null);t.default=r.exports}}]);